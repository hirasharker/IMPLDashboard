@{
    ViewBag.Title = "IMPL Dashboard";
    var dt = DateTime.Now.AddDays(-10);
}

@section css{
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+Bengali&display=swap" rel="stylesheet">
    <style>
        #field_strudcture_wise_sales table th, td {
            font-family: 'Noto Sans Bengali', 'SolaimanLipi', sans-serif;
        }

        #field_strudcture_wise_sales table {
            width: 100%;
            border-collapse: collapse;
        }

            #field_strudcture_wise_sales table th, td {
                border: 1px solid #ccc;
                padding: 6px;
            }

        #field_strudcture_wise_sales .group-header {
            background-color: #dfeeff;
            font-weight: bold;
        }

        #field_strudcture_wise_sales .subgroup-header {
            background-color: #f1faff;
        }

        #field_strudcture_wise_sales .toggle-icon {
            display: inline-block;
            width: 1em;
            margin-right: 5px;
            font-weight: bold;
        }

        #field_strudcture_wise_sales .hidden {
            display: none;
        }

        #field_strudcture_wise_sales table tr td a {
            /* text-decoration: none;*/
            color: #007bff;
        }

        .styled-link {
            color: blue; /* Link color */
            text-decoration: underline; /* Underline like a link */
            cursor: pointer; /* Pointer cursor on hover */
        }

            .styled-link:hover {
                color: darkblue; /* Change color on hover */
                text-decoration: none; /* Optional: Remove underline on hover */
            }
    </style>
}




<div class="page-content">
    <div class="container-fluid">

        <div class="row">
            <div class="col">

                <div class="h-100">
                    <div class="row mb-3 pb-1">
                        <div class="col-12">
                            <div class="d-flex align-items-lg-center flex-lg-row flex-column">
                                <div class="flex-grow-1">
                                    @*<h4 class="fs-16 mb-1">Welcome, Hira!</h4>
                                        <p class="text-muted mb-0">
                                            Here's what's happening with Ifad Multi Products Ltd.
                                        </p>*@
                                </div>
                                <div class="mt-3 mt-lg-0">
                                    <form action="javascript:void(0);">
                                        <div class="row g-3 mb-0 align-items-center">
                                            <div class="col-sm-auto">
                                                <div class="input-group">
                                                    <input type="date"
                                                           class="form-control border-0 dash-filter-picker shadow" value="@dt.ToString("yyyy-MM-dd")" id="dashboard-header-date" />
                                                </div>
                                            </div>
                                            <!--end col-->
                                        </div>
                                        <!--end row-->
                                    </form>
                                </div>
                            </div><!-- end card header -->
                        </div>
                        <!--end col-->
                    </div>
                    <!--end row-->
                    @*<div class="row" id="dashboard-header">

                        </div>*@

                    <div class="dashboard-header-wrapper position-relative">
                        <div class="row" id="dashboard-header">
                            <!-- Cards go here -->
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-xl-12">
                            <div class="card">
                                <div class="card-header align-items-center d-flex">
                                    <h4 class="card-title mb-0 flex-grow-1">National Focus SKU KPI Update</h4>
                                    <div class="flex-shrink-0" style="margin-right: 2em">
                                        <div class="input-group">
                                            <select id="national-sku-kpi-region" class="form-control border-0 shadow">
                                                <option value="">Select Region</option>
                                                @{
                                                    foreach (System.Data.DataRow row in ViewBag.region.Rows)
                                                    {
                                                        <option value="@row["REGION_ID"]">@row["REGION_NAME"]</option>
                                                    }
                                                }
                                            </select>
                                        </div>
                                    </div>

                                    <div class="flex-shrink-0" style="margin-right: 2em">
                                        <div class="input-group">
                                            <select id="national-sku-kpi-area" class="form-control border-0 shadow">
                                                <option value="">Select Area</option>
                                            </select>
                                        </div>
                                    </div>

                                    <div class="flex-shrink-0">
                                        <div class="input-group">
                                            <input type="date" id="nation-wise-sku-kpi-date"
                                                   class="form-control border-0 dash-filter-picker shadow" value="@dt.ToString("yyyy-MM-dd")" />
                                        </div>
                                    </div>
                                </div><!-- end card header -->

                                <div class="card-body position-relative" style="min-height: 300px;">
                                    <div class="table-responsive table-card" id="nation-wise-sku-kpi">
                                        <!-- Data loads here -->
                                    </div>
                                </div>

                            </div> <!-- .card-->
                        </div> <!-- .col-->
                    </div> <!-- end row-->

                    <div class="row">
                        <div class="col-xl-12">
                            <div class="card">
                                <div class="card-header align-items-center d-flex">
                                    <h4 class="card-title mb-0 flex-grow-1">Own DB Focus SKU KPI Update</h4>

                                    <div class="flex-shrink-0" style="margin-right: 2em">
                                        <div class="input-group">
                                            <select id="own-db-sku-kpi-region" class="form-control border-0 shadow">
                                                <option value="">Select Region</option>
                                                @{
                                                    foreach (System.Data.DataRow row in ViewBag.region.Rows)
                                                    {
                                                        <option value="@row["REGION_ID"]">@row["REGION_NAME"]</option>
                                                    }
                                                }
                                            </select>
                                        </div>
                                    </div>

                                    <div class="flex-shrink-0" style="margin-right: 2em">
                                        <div class="input-group">
                                            <select id="own-db-sku-kpi-area" class="form-control border-0 shadow">
                                                <option value="">Select Area</option>
                                            </select>
                                        </div>
                                    </div>

                                    <div class="flex-shrink-0">
                                        <div class="input-group">
                                            <input type="date" id="owndb-wise-sku-kpi-date"
                                                   class="form-control border-0 dash-filter-picker shadow" value="@dt.ToString("yyyy-MM-dd")" />
                                        </div>
                                    </div>


                                </div><!-- end card header -->

                                <div class="card-body position-relative" style="min-height: 300px;">
                                    <div class="table-responsive table-card" id="owndb-wise-sku-kpi">
                                        <!-- Data loads here -->
                                    </div>
                                </div>

                            </div> <!-- .card-->
                        </div> <!-- .col-->
                    </div> <!-- end row-->

                    <div class="row">
                        <div class="col-xl-12">
                            <div class="card">
                                <div class="card-header align-items-center d-flex">
                                    <h4 class="card-title mb-0 flex-grow-1">MTD Secondaray Sales Vs Primary Sales in Crore</h4>
                                    <div class="flex-shrink-0" style="margin-right: 2em">
                                        <div class="input-group">
                                            <select id="nation-wise-mtd-pri-vs-sec-channel" class="form-control border-0 shadow">
                                                <option value="">National</option>
                                                <option value="GT">GT</option>
                                                <option value="MT">MT</option>
                                            </select>
                                        </div>
                                    </div>


                                    <div class="flex-shrink-0">
                                        <div class="input-group">
                                            <input type="date" id="nation-wise-sec-vs-primary-dt"
                                                   class="form-control border-0 dash-filter-picker shadow" value="@dt.ToString("yyyy-MM-dd")" />
                                        </div>
                                    </div>
                                </div><!-- end card header -->

                                <div class="card-body position-relative" style="min-height: 300px;">
                                    <div class="table-responsive table-card" id="nation-wise-mtd-pri-vs-sec-sales">
                                        <!-- Data loads here -->
                                    </div>
                                </div>

                            </div> <!-- .card-->
                        </div> <!-- .col-->
                    </div> <!-- end row-->

                    <div class="row">
                        <div class="col-xl-8">
                            <div class="card">
                                <div class="card-header border-0 align-items-center d-flex">
                                    <h4 class="card-title mb-0 flex-grow-1">MoM Business Progress</h4>
                                    <div class="flex-shrink-0" style="margin-right: 2em">
                                        <div class="input-group">
                                            <input type="month" id="mom-business-progress-date"
                                                   class="form-control border-0 dash-filter-picker shadow" value="@dt.ToString("yyyy-MM")" />
                                        </div>
                                    </div>
                                    <div class="flex-shrink-0" style="margin-right: 2em">
                                        <div class="flex-shrink-0" style="margin-right: 2em">
                                            <div class="input-group">
                                                <select class="form-control border-0 shadow" id="mom-business-channel">
                                                    <option value="">National</option>
                                                    <option value="GT">GT</option>
                                                    <option value="MT">Modern Trade</option>
                                                    <option value="INSTITUTION">Institution</option>

                                                </select>
                                            </div>
                                        </div>
                                    </div>

                                    @*<div class="flex-shrink-0" style="margin-right: 2em">
                        <div class="flex-shrink-0" style="margin-right: 2em">
                            <div class="input-group">
                                <select class="form-control border-0 shadow" id="mom-no-months">
                                    <option value="12">12</option>
                                    <option value="18">18</option>
                                    <option value="24">24</option>

                                </select>
                            </div>
                        </div>
                    </div>*@


                                </div><!-- end card header -->



                                <div class="card-body p-0 pb-2">
                                    @*<div class="w-100">
                        <div id="customer_impression_charts"
                             data-colors='["--vz-light", "--vz-primary", "--vz-secondary"]'
                             class="apex-charts" dir="ltr"></div>
                    </div>*@
                                    <div class="w-100">
                                        <div id="mom_business_progress" style="height:400px"
                                             data-colors='["--vz-primary","--vz-light",  "--vz-secondary"]'
                                             class="apex-charts" dir="ltr"></div>
                                    </div>



                                </div><!-- end card body -->
                            </div><!-- end card -->
                        </div><!-- end col -->
                        <!-- end col -->

                        <div class="col-xl-4">
                            <!-- card -->
                            <div class="card card-height-100">
                                <div class="card-header align-items-center d-flex">
                                    <h4 class="card-title mb-0 flex-grow-1">Sales Acheive by Region</h4>
                                    <div class="flex-shrink-0" style="margin-right: 2em">
                                        <div class="input-group">
                                            <input type="month" id="RegionSalesTargetAchieve_date"
                                                   class="form-control border-0 dash-filter-picker shadow" value="@dt.ToString("yyyy-MM")" />
                                        </div>
                                    </div>

                                </div><!-- end card header -->
                                <!-- card body -->
                                <div class="card-body">



                                    <div class="px-2 py-2 mt-1" id="RegionSalesTargetAchieve">

                                    </div>
                                </div>
                                <!-- end card body -->
                            </div>
                            <!-- end card -->
                        </div>
                        <!-- end col -->
                    </div>




                    <div class="row">


                        <!-- end col -->
                        <div class="col-xl-12">
                            <div class="card">
                                <div class="card-header border-0 align-items-center d-flex">
                                    <h4 class="card-title mb-0 flex-grow-1">MoM Focus Category Business Progress</h4>
                                    <div class="flex-shrink-0" style="margin-right: 2em">
                                        <div class="input-group">
                                            <input type="month" id="mom-focus-cat-business-progress-date"
                                                   class="form-control border-0 dash-filter-picker shadow" value="@dt.ToString("yyyy-MM")" />
                                        </div>
                                    </div>
                                    <div class="flex-shrink-0" style="margin-right: 2em">
                                        <div class="flex-shrink-0" style="margin-right: 2em">
                                            <div class="input-group">
                                                <select class="form-control border-0 shadow" id="mom-focus-cat-business-channel">
                                                    <option value="">National</option>
                                                    <option value="GT">GT</option>
                                                    <option value="MT">Modern Trade</option>
                                                    <option value="INSTITUTION">Institution</option>

                                                </select>
                                            </div>
                                        </div>
                                    </div>




                                </div><!-- end card header -->



                                <div class="card-body p-0 pb-2">


                                    <div class="w-100">
                                        <div id="mom_focus_cat_business_progress" style="height:400"
                                             data-colors='["--vz-primary","--vz-light",  "--vz-secondary"]'
                                             class="apex-charts" dir="ltr"></div>
                                    </div>



                                </div><!-- end card body -->
                            </div><!-- end card -->



                            <div class="card">
                                <div class="card-header border-0 align-items-center d-flex">
                                    <h4 class="card-title mb-0 flex-grow-1">MoM Focus Category Business Progress</h4>
                                    <div class="flex-shrink-0" style="margin-right: 2em">
                                        <div class="input-group">
                                            <input type="month" id="mom-eco-memo-business-progress-date"
                                                   class="form-control border-0 dash-filter-picker shadow" value="@dt.ToString("yyyy-MM")" />
                                        </div>
                                    </div>
                                    <div class="flex-shrink-0" style="margin-right: 2em">
                                        <div class="flex-shrink-0" style="margin-right: 2em">
                                            <div class="input-group">
                                                <select class="form-control border-0 shadow" id="mom-eco-memo-business-channel">
                                                    <option value="">National</option>
                                                    <option value="GT">GT</option>
                                                    <option value="MT">Modern Trade</option>
                                                    <option value="INSTITUTION">Institution</option>

                                                </select>
                                            </div>
                                        </div>
                                    </div>

                                </div><!-- end card header -->



                                <div class="card-body p-0 pb-2">


                                    <div class="w-100">
                                        <div id="mom_eco_memo_business_progress" style="height:400"
                                             data-colors='["--vz-primary","--vz-light",  "--vz-secondary"]'
                                             class="apex-charts" dir="ltr"></div>
                                    </div>




                                </div><!-- end card body -->
                            </div><!-- end card -->




                            <div class="row">
                                <div class="col-xl-12">
                                    <div class="card">
                                        <div class="card-header border-0 align-items-center d-flex">
                                            <h4 class="card-title mb-0 flex-grow-1">MoM Business Progress (CD)</h4>
                                            <div class="flex-shrink-0" style="margin-right: 2em">
                                                <div class="input-group">
                                                    <input type="month" id="cd-mom-business-progress-date"
                                                           class="form-control border-0 dash-filter-picker shadow" value="@dt.ToString("yyyy-MM")" />
                                                </div>
                                            </div>
                                            <div class="flex-shrink-0" style="margin-right: 2em">
                                                <div class="flex-shrink-0" style="margin-right: 2em">
                                                    <div class="input-group">
                                                        <select class="form-control border-0 shadow" id="cd-mom-business-channel">
                                                            <option value="">National</option>
                                                            <option value="GT">GT</option>
                                                            <option value="MT">Modern Trade</option>
                                                            <option value="INSTITUTION">Institution</option>

                                                        </select>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="flex-shrink-0" style="margin-right: 2em">
                                                <div class="flex-shrink-0" style="margin-right: 2em">
                                                    <div class="input-group">
                                                        <select class="form-control border-0 shadow" id="cd-mom-no-months">
                                                            <option value="12">No. of Month</option>
                                                            <option value="12">12</option>
                                                            <option value="18">18</option>
                                                            <option value="24">24</option>

                                                        </select>
                                                    </div>
                                                </div>
                                            </div>


                                        </div><!-- end card header -->



                                        <div class="card-body p-0 pb-2">
                                            @*<div class="w-100">
                                                    <div id="customer_impression_charts"
                                                         data-colors='["--vz-light", "--vz-primary", "--vz-secondary"]'
                                                         class="apex-charts" dir="ltr"></div>
                                                </div>*@
                                            <div class="w-100">
                                                <div id="cd_mom_business_progress" style="height:400px"
                                                     data-colors='["--vz-primary","--vz-light",  "--vz-secondary"]'
                                                     class="apex-charts" dir="ltr"></div>
                                            </div>



                                        </div><!-- end card body -->
                                    </div><!-- end card -->
                                </div><!-- end col -->

                                
                            </div>




                            <div class="card">
                                <div class="card-header border-0 align-items-center d-flex">
                                    <h4 class="card-title mb-0 flex-grow-1">MoM Region ECO Business Progress</h4>
                                    <div class="flex-shrink-0" style="margin-right: 2em">
                                        <div class="input-group">
                                            <input type="month" id="mom-region-eco-memo-business-progress-date"
                                                   class="form-control border-0 dash-filter-picker shadow" value="@dt.ToString("yyyy-MM")" />
                                        </div>
                                    </div>
                                    <div class="flex-shrink-0" style="margin-right: 2em">
                                        <div class="flex-shrink-0" style="margin-right: 2em">
                                            <div class="input-group">
                                                <select class="form-control border-0 shadow" id="mom-region-eco-memo-business-channel">
                                                    <option value="">National</option>
                                                    <option value="GT">GT</option>
                                                    <option value="MT">Modern Trade</option>
                                                    <option value="INSTITUTION">Institution</option>

                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                </div><!-- end card header -->

                                <div class="card-body p-0 pb-2">

                                    <div class="w-100">

                                        <div id="mom_region_eco_memo_business_progress" style="height:400px"
                                             data-colors='["--vz-primary","--vz-light",  "--vz-secondary"]'
                                             class="apex-charts" dir="ltr">

                                        </div>

                                        <div id="quarterly_business_trend" style="height:400px"
                                             data-colors='["--vz-primary","--vz-light",  "--vz-secondary"]'
                                             class="apex-charts" dir="ltr"></div>

                                    </div>


                                </div><!-- end card body -->
                            </div><!-- end card -->


                        </div><!-- end col -->

                    </div>

                    <div class="row">

                        <div class="col-xl-6">
                            <div class="card">
                                <div class="card-header align-items-center d-flex">
                                    <h4 class="card-title mb-0 flex-grow-1">Field Structure wise Sales</h4>

                                </div><!-- end card header -->

                                <div class="card-body">
                                    <div class="table-responsive table-card" style="min-height:350px;">

                                        <table id="field_strudcture_wise_sales" class="table table-bordered table-centered align-middle table-nowrap mb-0">
                                            <thead>
                                                <tr>
                                                    <th>Region</th>
                                                    <th>
                                                        Area
                                                    </th>
                                                    <th>Territory</th>
                                                    <th>Dealer</th>
                                                    <th>Sales Amount[TP]</th>
                                                </tr>
                                            </thead>
                                            <tbody id="field_strudcture_wise_sales_table_body">
                                                <!-- Dynamic content goes here -->
                                            </tbody>
                                        </table>

                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-xl-6">
                            <div class="card">
                                <div class="card-header align-items-center d-flex">
                                    <h4 class="card-title mb-0 flex-grow-1">Route wise Outlet wise Sales [<span id="dealer_info"></span>]</h4>


                                </div><!-- end card header -->

                                <div class="card-body">
                                    <div class="table-responsive table-card" style="min-height:350px;">

                                        <table id="routeSalesStatusTable" class="table table-hover table-centered align-middle table-nowrap mb-0">
                                            <thead>
                                                <tr>
                                                    <th>ROUTE</th>
                                                    <th>Outlet</th>
                                                    <th>Total TP Sales</th>
                                                    <th>Total Memo</th>
                                                    <th>Sales Months</th>
                                                    <th>Average / Month</th>
                                                </tr>
                                            </thead>
                                            <tbody></tbody>
                                        </table>

                                    </div>
                                </div>
                            </div>
                        </div>


                    </div> <!-- end row-->


                    <div class="row">
                        <div class="col-xl-6">
                            <div class="card">
                                <div class="card-header align-items-center d-flex">
                                    <h4 class="card-title mb-0 flex-grow-1">Best Selling Products</h4>
                                    <div class="flex-shrink-0">
                                        <select id="best_selling_products_date" class="form-select">
                                            @*<option value="today">Today</option>*@
                                            <option value="yesterday">Yesterday</option>
                                            <option value="last7">Last 7 Days</option>
                                            <option value="last30">Last 30 Days</option>
                                            <option value="thisMonth">This Month</option>
                                            <option value="lastMonth">Last Month</option>
                                        </select>


                                    </div>
                                </div><!-- end card header -->

                                <div class="card-body">
                                    <div class="table-responsive table-card">
                                        <table class="table table-hover table-centered align-middle table-nowrap mb-0">
                                            <tbody id="best-selling-products-body">
                                            </tbody>
                                        </table>
                                    </div>

                                </div>
                            </div>
                        </div>

                        <div class="col-xl-6">
                            <div class="card card-height-100">
                                <div class="card-header align-items-center d-flex">
                                    <h4 class="card-title mb-0 flex-grow-1">Top Sellers</h4>
                                    <div class="flex-shrink-0">
                                        <span class="text-muted">
                                            <select id="top_sellters_date" class="form-select">
                                                @*<option value="today">Today</option>*@
                                                <option value="yesterday">Yesterday</option>
                                                <option value="last7">Last 7 Days</option>
                                                <option value="last30">Last 30 Days</option>
                                                <option value="thisMonth">This Month</option>
                                                <option value="lastMonth">Last Month</option>
                                            </select>
                                        </span>


                                    </div>
                                </div><!-- end card header -->

                                <div class="card-body">
                                    <div class="table-responsive table-card">
                                        <table class="table table-centered table-hover align-middle table-nowrap mb-0">
                                            <tbody id="top-sellers-body">
                                            </tbody>
                                        </table><!-- end table -->
                                    </div>
                                </div> <!-- .card-body-->
                            </div> <!-- .card-->
                        </div> <!-- .col-->
                    </div> <!-- end row-->





                </div> <!-- end .h-100-->

            </div> <!-- end col -->

        </div>

        <div id="productDeatilModal" class="modal fade" tabindex="-1" role="dialog">
            <div class="modal-dialog modal-xl" role="document">
                <!-- 🔸 modal-xl here -->
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Product Sales Detail</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body table-responsive">
                        <!-- Table or content goes here -->
                    </div>

                </div>
            </div>
        </div>


    </div>
    <!-- container-fluid -->
</div>
@section Scripts{
    <script type="text/javascript" src="https://cdn.jsdelivr.net/jquery/latest/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />

    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js" integrity="sha512-ElRFoEQdI5Ht6kZvyzXhYG9NqjtkmlkfYk0wr6wHxU9JEHakS7UJZNeml5ALk+8IKlU6jDgMabC3vkumRokgJA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2"></script>
    <script src="https://cdn.jsdelivr.net/npm/jquery-year-select@1.2.0/lib/year-select.js"></script>

    <script>
        $(document).ready(function () {

            function delay(ms) {
                return new Promise(resolve => setTimeout(resolve, ms));
            }

            function showCardSpinner(containerSelector) {
                const $container = $(containerSelector);

                // Ensure container is position-relative
                if (!$container.hasClass('position-relative')) {
                    $container.addClass('position-relative');
                }

                // Clone the global spinner and backdrop
                const $spinnerClone = $('#global-spinner').clone().removeAttr('id').removeClass('d-none');
                const $backdropClone = $('#global-spinner-backdrop').clone().removeAttr('id').removeClass('d-none');

                // Append clones inside the card
                $container.append($backdropClone).append($spinnerClone);

                // Store references on the container for removal
                $container.data('spinnerClone', $spinnerClone);
                $container.data('backdropClone', $backdropClone);
            }


            function hideCardSpinner(containerSelector) {
                const $container = $(containerSelector);

                const $spinnerClone = $container.data('spinnerClone');
                const $backdropClone = $container.data('backdropClone');

                if ($spinnerClone) $spinnerClone.remove();
                if ($backdropClone) $backdropClone.remove();

                // Clear stored references
                $container.removeData('spinnerClone');
                $container.removeData('backdropClone');
            }

            const nationWiseSkuKpiId = '.card:has(#nation-wise-sku-kpi) .card-body';
            const ownDbSkuKpiId = '.card:has(#owndb-wise-sku-kpi) .card-body';
            const priVsSecId = '.card:has(#nation-wise-mtd-pri-vs-sec-sales) .card-body';
            const momBusinessProgressId = '.card:has(#mom_business_progress) .card-body';
            const momFocusCatBusinessId = '.card:has(#mom_focus_cat_business_progress) .card-body';
            const momEcoMemoBusinessId = '.card:has(#mom_eco_memo_business_progress) .card-body';
            const cdMomBusinessId = '.card:has(#cd_mom_business_progress) .card-body';
            const momRegionEcoMemoId = '.card:has(#mom_region_eco_memo_business_progress) .card-body';
            /*const quarterlyTrendId = '.card:has(#quarterly_business_trend) .card-body';*/
            const fieldStructureSalesId = '.card:has(#field_strudcture_wise_sales) .card-body';
            const routeSalesStatusId = '.card:has(#routeSalesStatusTable) .card-body';
            const regionSalesTargetAchieveId = '.card:has(#RegionSalesTargetAchieve) .card-body';
            const bestSellingProductsId = '.card:has(#best-selling-products-body) .card-body';
            const topSellersId = '.card:has(#top-sellers-body) .card-body';
            const productDetailModalId = '#productDeatilModal .modal-body'; // For modal spinner


            showCardSpinner(nationWiseSkuKpiId);
            showCardSpinner(ownDbSkuKpiId);
            showCardSpinner(priVsSecId);
            showCardSpinner(momBusinessProgressId);
            showCardSpinner(momFocusCatBusinessId);
            showCardSpinner(momEcoMemoBusinessId);
            showCardSpinner(cdMomBusinessId);
            showCardSpinner(momRegionEcoMemoId);
            /*showCardSpinner(quarterlyTrendId);*/
            showCardSpinner(fieldStructureSalesId);
            /*showCardSpinner(routeSalesStatusId);*/
            showCardSpinner(regionSalesTargetAchieveId);
            showCardSpinner(bestSellingProductsId);
            showCardSpinner(topSellersId);
            showCardSpinner(productDetailModalId);


            /*alert('loaded')*/

            var dt = '@dt.ToString("yyyy-MM-dd")';

            var regionId = "";

            var areaId = "";

            /*Dashboard Header start*/

            function dashboardHeader(pDate) {
                return new Promise((resolve, reject) => {
                    $.ajax({
                        url: "/Dashboard/DashboardHeaderJson",
                        data: { dt: pDate },
                        beforeSend: function () {
                        },
                        success: function (result) {
                            $("#dashboard-header").html(result);
                            resolve();
                        },
                        error: function () {
                            $("#dashboard-header").html('<div class="text-danger text-center py-4">Failed to load data.</div>');
                            reject();
                        },
                        complete: function () {
                        }
                    });
                });
            }



            //dashboardHeader(dt);

            $('#dashboard-header-date').change(function () {


                dt = $(this).val();

                dashboardHeader(dt);

            })

            /*Dashboard Header ends*/

            /*nation wise sku kpi start*/


            function nationWiseSkuKpi(pDate, regionId, areaId) {

                return new Promise((resolve, reject) => {
                    const containerSelector = '.card:has(#nation-wise-sku-kpi) .card-body';

                    $.ajax({
                        url: "/Dashboard/GetFocusSkuKpiJson",
                        data: { report_type: "NATIONAL", p_as_on_date: pDate, region_id: regionId, area_id: areaId },
                        beforeSend: function () {
                            /*showCardSpinner(containerSelector); */
                        },
                        success: function (result) {
                            $("#nation-wise-sku-kpi").html(result);
                            resolve();
                        },
                        error: function () {
                            $("#nation-wise-sku-kpi").html('<div class="text-danger text-center py-4">Failed to load data.</div>');
                            reject();
                        },
                        complete: function () {
                            /*hideCardSpinner(containerSelector);*/
                        }
                    });
                });
            }


           // nationWiseSkuKpi(dt, regionId, areaId);

            $('#nation-wise-sku-kpi-date').change(function () {

                dt = $(this).val();

                regionId = $('#national-sku-kpi-region').val()

                areaId = $('#national-sku-kpi-area').val()

                showCardSpinner(nationWiseSkuKpiId)
                nationWiseSkuKpi(dt, regionId, areaId)
                .then(() => hideCardSpinner(nationWiseSkuKpiId))
            })

            // Populate area dropdown on region change
            $('#national-sku-kpi-region').change(function () {
                var regionId = $(this).val();

                var areaId = '';

                if (regionId && regionId !== "") {
                    $.ajax({
                        url: '/Dashboard/GetAreaByRegion', // Controller Action
                        type: 'GET',
                        data: { region_id: regionId },
                        success: function (data) {
                            var areaDropdown = $('#national-sku-kpi-area');
                            areaDropdown.empty();
                            areaDropdown.append('<option value="">Select Area</option>');

                            showCardSpinner(nationWiseSkuKpiId)
                            nationWiseSkuKpi(dt, regionId, areaId)
                                .then(() => hideCardSpinner(nationWiseSkuKpiId))
                            

                            if (data && data.length > 0) {
                                $.each(data, function (i, item) {
                                    areaDropdown.append(`<option value="${item.AREA_ID}">${item.AREA_NAME}</option>`);
                                });
                            } else {
                                areaDropdown.append('<option disabled>No areas found</option>');
                            }
                        },
                        error: function () {
                            alert('Failed to load areas.');
                        }
                    });
                } else {
                    $('#national-sku-kpi-area').html('<option>Select Area</option>');
                }
            });


            // Populate area dropdown on region change
            $('#national-sku-kpi-area').change(function () {
                var regionId = $('#national-sku-kpi-region').val();

                var areaId = $(this).val();

                showCardSpinner(nationWiseSkuKpiId)
                nationWiseSkuKpi(dt, regionId, areaId)
                    .then(() => hideCardSpinner(nationWiseSkuKpiId))
            });


            /*nation wise sku kpi ends*/

            /*own db wise sku kpi start*/



            var ownDbDt = '@dt.ToString("yyyy-MM-dd")';

            var ownDbRegionId = "";

            var ownDbAreaId = "";

            function owndbWiseSkuKpi(pDate, region, area) {

                return new Promise((resolve, reject) => {
                    const containerSelector = '.card:has(#owndb-wise-sku-kpi) .card-body';

                    $.ajax({
                        url: "/Dashboard/GetFocusSkuKpiJson",
                        data: { report_type: "OWN DB", p_as_on_date: pDate, region_id: regionId, area_id: areaId },
                        beforeSend: function () {
                            /*showCardSpinner(containerSelector);*/
                        },
                        success: function (result) {
                            $("#owndb-wise-sku-kpi").html(result);
                            resolve();
                        },
                        error: function () {
                            $("#owndb-wise-sku-kpi").html('<div class="text-danger text-center py-4">Failed to load data.</div>');
                            reject();
                        },
                        complete: function () {
                            /*hideCardSpinner(containerSelector);*/
                        }
                    });
                });
            }

            //owndbWiseSkuKpi(ownDbDt, ownDbRegionId, ownDbAreaId);

            $('#owndb-wise-sku-kpi-date').change(function () {

                ownDbDt = $(this).val();

                owndbWiseSkuKpi(ownDbDt, ownDbRegionId, ownDbAreaId);

            })

            /*owndb wise sku kpi ends*/


            /*mtd primary vs secondary sales start*/
            var nationWisePriVsSecChannel, nationWisePriVsSecAreaId = ""

            function nationWisemtdPrimaryVsSecondary(pDate, channel, areaId) {

                return new Promise((resolve, reject) => {
                    const containerSelector = '.card:has(#nation-wise-mtd-pri-vs-sec-sales) .card-body';

                    $.ajax({
                        url: "/Dashboard/NationWisePrimaryVsSecondaryJson",
                        data: { dt: pDate, channel: channel, area_id: areaId },
                        beforeSend: function () {
                            /*showCardSpinner(containerSelector);*/
                        },
                        success: function (result) {
                            $("#nation-wise-mtd-pri-vs-sec-sales").html(result);
                            resolve();
                        },
                        error: function () {
                            $("#nation-wise-mtd-pri-vs-sec-sales").html('<div class="text-danger text-center py-4">Failed to load data.</div>');
                            reject();
                        },
                        complete: function () {
                            /*hideCardSpinner(containerSelector);*/
                        }
                    });
                });
            }


           // nationWisemtdPrimaryVsSecondary(dt, nationWisePriVsSecChannel, nationWisePriVsSecAreaId);

            $('#nation-wise-sec-vs-primary-dt').change(function () {


                dt = $(this).val();

                nationWisePriVsSecChannel = $('#nation-wise-mtd-pri-vs-sec-channel').val()

                nationWisePriVsSec = $('#nation-wise-mtd-pri-vs-sec-area').val()

                nationWisemtdPrimaryVsSecondary(dt, nationWisePriVsSecChannel, nationWisePriVsSec);

                alert(dt)

            })

            // Populate area dropdown on region change
            $('#nation-wise-mtd-pri-vs-sec-channel').change(function () {
                var channel = $(this).val();

                var areaId = "";

                nationWisemtdPrimaryVsSecondary(dt, channel, areaId);

            });



            /*mtd primary vs secondary sales ends*/


            /* MoM Sales bar chart */

            $("#mom-business-progress-date").change(function () {
                mom_business_progress_data();

            });

            $("#mom-business-channel").change(function () {
                mom_business_progress_data();

            });

            var rawData = [];


            //mom_business_progress_data();

            function mom_business_progress_data() {

                return new Promise((resolve, reject) => {

                    const containerSelector = '.card:has(#mom_business_progress) .card-body';

                    var mom_date = $("#mom-business-progress-date").val();
                    var mom_channel = $("#mom-business-channel").val();
                    var mom_no_months = $("#mom-no-months").val();

                    var baseUrl = '@Url.Content("~/")';
                    $.ajax({
                        url: baseUrl + 'dashboard/getMoMBusinessProgress',
                        type: 'GET',
                        beforeSend: function () {
                            /*showCardSpinner(containerSelector);*/
                        },
                        data: { p_date_to: mom_date, mom_channel: mom_channel, p_no_months: mom_no_months },
                        success: function (result) {

                            if (result != null) {
                                rawData = JSON.parse(result);
                                //console.log(rawData);
                                mom_business_progress();
                            }
                            resolve();
                        },
                        error: function (xhr, status, error) {
                            console.error("Error fetching data:", error);
                            alert("Failed to fetch business progress data.");
                            reject();
                        },
                        complete: function () {
                            /*hideCardSpinner(containerSelector);*/
                        }
                    });
                });


            }



            function getChartColorsArray(e) {
                if (null !== document.getElementById(e)) {
                    var t = document.getElementById(e).getAttribute("data-colors");
                    if (t) return (t = JSON.parse(t)).map(function (e) {
                        var t = e.replace(" ", "");
                        return -1 === t.indexOf(",") ? getComputedStyle(document.documentElement).getPropertyValue(t) || t : 2 == (e = e.split(",")).length ? "rgba(" + getComputedStyle(document.documentElement).getPropertyValue(e[0]) + "," + e[1] + ")" : t
                    });
                    console.warn("data-colors atributes not found on", e)
                }
            }



            var momChart = null;

            function mom_business_progress() {
                var mom_chart_color = getChartColorsArray("mom_business_progress");

                const categories = rawData.map(item => {
                    const d = new Date(item.SALES_MONTH);
                    const month = d.toLocaleString('default', { month: 'short' });
                    const year = d.getFullYear().toString().substr(2);
                    return `${month} ${year}`;
                });

                const salesData = rawData.map(item => item.SALES_IN_TP);

                const options = {
                    chart: {
                        type: 'bar',
                        height: 400
                    },
                    title: {
                        text: 'Month-wise Sales in TP',
                        align: 'center'
                    },
                    series: [{
                        name: 'Sales (TP)',
                        data: salesData
                    }],
                    xaxis: {
                        categories: categories,
                        title: {
                            text: 'Month'
                        }
                    },
                    yaxis: {
                        title: {
                            text: 'Sales (TP in Crore)'
                        }
                    },
                    dataLabels: {
                        enabled: true
                    },
                    colors: mom_chart_color,
                    grid: {
                        show: true,
                        xaxis: {
                            lines: {
                                show: true
                            }
                        },
                        yaxis: {
                            lines: {
                                show: false
                            }
                        },
                        padding: {
                            top: 0,
                            right: -2,
                            bottom: 15,
                            left: 10
                        }
                    },
                    legend: {
                        show: true,
                        horizontalAlign: "center",
                        offsetX: 0,
                        offsetY: -5,
                        markers: {
                            width: 9,
                            height: 9,
                            radius: 6
                        },
                        itemMargin: {
                            horizontal: 10,
                            vertical: 0
                        }
                    },
                    plotOptions: {
                        bar: {
                            columnWidth: "30%",
                            barHeight: "70%"
                        }
                    }
                };

                // Destroy existing chart before rendering new one
                if (momChart !== null) {
                    momChart.destroy();
                }

                momChart = new ApexCharts(document.querySelector("#mom_business_progress"), options);
                momChart.render();
            }

            /* MoM Sales bar chart END */



            /** MoM Focus Category Business Progress **/




            function mom_focus_cat_business_progress_data() {

                return new Promise((resolve, reject) => {

                    const containerSelector = '.card:has(#mom_focus_cat_business_progress) .card-body';

                    var mom_date = $("#mom-focus-cat-business-progress-date").val();
                    var mom_channel = $("#mom-focus-cat-business-channel").val();
                    var mom_no_months = "";

                    var baseUrl = '@Url.Content("~/")';
                    $.ajax({
                        url: baseUrl + 'dashboard/getMoMFocusCatBusinessProgress',
                        type: 'GET',
                        beforeSend: function () {
                            /*showCardSpinner(containerSelector);*/
                        },
                        data: { p_date_to: mom_date, mom_channel: mom_channel, p_no_months: mom_no_months },
                        success: function (result) {

                            if (result != null) {
                                focusCatBusinessTPData = JSON.parse(result);
                                //console.log("Focus Category Business Progress")
                                //console.log(focusCatBusinessTPData);
                                mom_focus_cat_business_progress(focusCatBusinessTPData);
                            }
                            resolve();
                        },
                        error: function (xhr, status, error) {
                            console.error("Error fetching data:", error);
                            alert("Failed to fetch business progress data.");
                            reject();
                        },
                        complete: function () {
                            /*hideCardSpinner(containerSelector);*/
                        }
                    });
                });


            }


            var momCatChart = null;

            function mom_focus_cat_business_progress(focusCatBusinessTPData) {
                var mom_chart_color = getChartColorsArray("mom_focus_cat_business_progress");

                // Destroy previous chart instance
                if (momCatChart !== null) {
                    momCatChart.destroy();
                }

                // Assume this is your JSON response

                // Step 1: Get all unique months
                const uniqueMonths = [...new Set(focusCatBusinessTPData.map(item => item.SALES_MONTH))]
                    .sort()
                    .map(dateStr => {
                        const d = new Date(dateStr);
                        const month = d.toLocaleString('default', { month: 'short' });
                        const year = d.getFullYear().toString().substr(2);
                        return `${month} '${year}`;
                    });

                // Step 2: Group by category
                const categories = [...new Set(focusCatBusinessTPData.map(item => item.FOCUS_CATEGORY_NAME))];

                const grouped = {};
                categories.forEach(cat => {
                    grouped[cat] = new Array(uniqueMonths.length).fill(0);
                });

                focusCatBusinessTPData.forEach(item => {
                    const date = new Date(item.SALES_MONTH);
                    const monthLabel = `${date.toLocaleString('default', { month: 'short' })} '${date.getFullYear().toString().substr(2)}`;
                    const index = uniqueMonths.indexOf(monthLabel);
                    grouped[item.FOCUS_CATEGORY_NAME][index] = item.SALES_IN_TP;
                });

                // Step 3: Build Apex series
                const series = categories.map(cat => ({
                    name: cat,
                    data: grouped[cat]
                }));

                // Step 4: Create the Apex Line Chart
                const options = {
                    chart: {
                        type: 'line',
                        height: 400,
                        toolbar: {
                            show: true
                        }
                    },
                    series: series,
                    xaxis: {
                        categories: uniqueMonths,
                        title: {
                            text: "Month"
                        }
                    },
                    yaxis: {
                        title: {
                            text: "Sales (in TP)"
                        }
                    },
                    title: {
                        text: 'Category-wise Sales Trend',
                        align: 'center'
                    },
                    dataLabels: {
                        enabled: false
                    },
                    stroke: {
                      //  curve: 'smooth',
                        width: 2
                    },
                    legend: {
                        position: 'bottom'
                    },
                    tooltip: {
                        shared: true,
                        intersect: false
                    }
                };

                momCatChart = new ApexCharts(document.querySelector("#mom_focus_cat_business_progress"), options);
                momCatChart.render();

            }




            $("#mom-focus-cat-business-progress-date").change(function () {

                mom_focus_cat_business_progress_data();
            });

            $("#mom-focus-cat-business-channel").change(function () {

                mom_focus_cat_business_progress_data();
            });


            // mom_focus_cat_business_progress_data();

            /** MoM Focus Category Business Progress END **/



            /** MoM Eco Memo Business Progress **/



            function mom_eco_memo_business_progress_data() {
                return new Promise((resolve, reject) => {

                    const containerSelector = '.card:has(#mom_eco_memo_business_progress) .card-body';

                    var mom_date = $("#mom-eco-memo-business-progress-date").val();
                    var mom_channel = $("#mom-eco-memo-business-channel").val();
                    var mom_no_months = "";

                    var baseUrl = '@Url.Content("~/")';
                    $.ajax({
                        url: baseUrl + 'dashboard/getMoMEcoMemoBusinessProgress',
                        type: 'GET',
                        beforeSend: function () {
                            /*showCardSpinner(containerSelector);*/
                        },
                        data: { p_date_to: mom_date, mom_channel: mom_channel, p_no_months: mom_no_months },
                        success: function (result) {

                            if (result != null) {
                                var momEcoMemoData = JSON.parse(result);
                                //console.log("Eco Memo Business Progress")
                                //console.log(momEcoMemoData);
                                //mom_business_progress();
                                mom_eco_memo_business_progress(momEcoMemoData);
                            }
                            resolve();
                        },
                        error: function (xhr, status, error) {
                            console.error("Error fetching data:", error);
                            alert("Failed to fetch business progress data.");
                            reject();
                        },
                        complete: function () {
                            /*hideCardSpinner(containerSelector);*/
                        }
                    });
                });

            }

          //  mom_eco_memo_business_progress_data();


            var momFocusCatChart = null;


            function mom_eco_memo_business_progress(rawStats) {
                var mom_chart_color = getChartColorsArray("mom_business_progress");

                const months = rawStats.map(item => {
                    const d = new Date(item.SALES_MONTH);
                    return `${d.toLocaleString('default', { month: 'short' })} '${d.getFullYear().toString().substr(2)}`;
                });

                // Series data
                const ecoData = rawStats.map(item => item.ECO);
                const memoData = rawStats.map(item => item.MEMO);
                const salesTPData = rawStats.map(item => item.SALES_TP_IN_CR);
                const salesPerMemoData = rawStats.map(item => item.SALES_PER_MEMO);

                // Chart config
                const options = {
                    chart: {
                        type: 'line',
                        height: 400,
                        toolbar: {
                            show: true
                        }
                    },
                    title: {
                        text: "Monthly Performance Metrics",
                        align: 'center'
                    },
                    xaxis: {
                        categories: months,
                        title: { text: "Month" }
                    },
                    yaxis: {
                        title: { text: "Values" },
                        labels: {
                            formatter: function (val) {
                                return val.toFixed(0);
                            }
                        }
                    },
                    dataLabels: {
                        enabled: false
                    },
                    stroke: {
                        curve: 'smooth',
                        width: 2
                    },
                    tooltip: {
                        shared: true,
                        intersect: false
                    },
                    legend: {
                        position: 'bottom'
                    },
                    series: [
                        { name: "ECO", data: ecoData },
                        { name: "MEMO", data: memoData },
                        { name: "Sales TP (Cr)", data: salesTPData },
                        { name: "Sales/ Memo", data: salesPerMemoData }
                    ]
                };


                // Destroy existing chart before rendering new one
                if (momFocusCatChart !== null) {
                    momFocusCatChart.destroy();
                }

                momFocusCatChart = new ApexCharts(document.querySelector("#mom_eco_memo_business_progress"), options);
                momFocusCatChart.render();
            }



            /** MoM Eco Memo Business Progress End **/



            /* CD MoM Sales bar chart */

            $("#cd-mom-business-progress-date").change(function () {
                mom_business_progress_data();

            });

            $("#cd-mom-business-channel").change(function () {
                mom_business_progress_data();

            });

            var rawData = [];



            function cd_mom_business_progress_data() {

                return new Promise((resolve, reject) => {

                    const containerSelector = '.card:has(#cd_mom_business_progress) .card-body';

                    var mom_date = $("#mom-business-progress-date").val();
                    var mom_channel = $("#mom-business-channel").val();
                    var mom_no_months = $("#mom-no-months").val();

                    var baseUrl = '@Url.Content("~/")';
                    $.ajax({
                        url: baseUrl + 'dashboard/getMoMBusinessProgress',
                        type: 'GET',
                        beforeSend: function () {
                            /*showCardSpinner(containerSelector);*/
                        },
                        data: { p_date_to: mom_date, mom_channel: mom_channel, p_no_months: mom_no_months, p_cd: '1015' },
                        success: function (result) {

                            if (result != null) {
                                rawData = JSON.parse(result);
                                //console.log(rawData);
                                cd_mom_business_progress();
                            }
                            resolve();
                        },
                        error: function (xhr, status, error) {
                            console.error("Error fetching data:", error);
                            alert("Failed to fetch business progress data.");
                            reject();
                        },
                        complete: function () {
                            /*hideCardSpinner(containerSelector);*/
                        }
                    });
                });

            }

            //cd_mom_business_progress_data();



            function getChartColorsArray(e) {
                if (null !== document.getElementById(e)) {
                    var t = document.getElementById(e).getAttribute("data-colors");
                    if (t) return (t = JSON.parse(t)).map(function (e) {
                        var t = e.replace(" ", "");
                        return -1 === t.indexOf(",") ? getComputedStyle(document.documentElement).getPropertyValue(t) || t : 2 == (e = e.split(",")).length ? "rgba(" + getComputedStyle(document.documentElement).getPropertyValue(e[0]) + "," + e[1] + ")" : t
                    });
                    console.warn("data-colors atributes not found on", e)
                }
            }



            var cdMomChart = null;

            function cd_mom_business_progress() {
                var cd_mom_chart_color = getChartColorsArray("cd_mom_business_progress");

                const categories = rawData.map(item => {
                    const d = new Date(item.SALES_MONTH);
                    const month = d.toLocaleString('default', { month: 'short' });
                    const year = d.getFullYear().toString().substr(2);
                    return `${month} ${year}`;
                });

                const salesData = rawData.map(item => item.SALES_IN_TP);

                const options = {
                    chart: {
                        type: 'bar',
                        height: 400
                    },
                    title: {
                        text: 'Commission Dealer (CD) Month-wise Sales in TP',
                        align: 'center'
                    },
                    series: [{
                        name: 'Sales (TP)',
                        data: salesData
                    }],
                    xaxis: {
                        categories: categories,
                        title: {
                            text: 'Month'
                        }
                    },
                    yaxis: {
                        title: {
                            text: 'Sales (TP in Crore)'
                        }
                    },
                    dataLabels: {
                        enabled: true
                    },
                    colors: cd_mom_chart_color,
                    grid: {
                        show: true,
                        xaxis: {
                            lines: {
                                show: true
                            }
                        },
                        yaxis: {
                            lines: {
                                show: false
                            }
                        },
                        padding: {
                            top: 0,
                            right: -2,
                            bottom: 15,
                            left: 10
                        }
                    },
                    legend: {
                        show: true,
                        horizontalAlign: "center",
                        offsetX: 0,
                        offsetY: -5,
                        markers: {
                            width: 9,
                            height: 9,
                            radius: 6
                        },
                        itemMargin: {
                            horizontal: 10,
                            vertical: 0
                        }
                    },
                    plotOptions: {
                        bar: {
                            columnWidth: "30%",
                            barHeight: "70%"
                        }
                    }
                };

                // Destroy existing chart before rendering new one
                if (cdMomChart !== null) {
                   cdMomChart.destroy();
                }

                cdMomChart = new ApexCharts(document.querySelector("#cd_mom_business_progress"), options);
                cdMomChart.render();
            }

            /* CD MoM Sales bar chart END */



                /** MoM Eco Memo Business Progress **/



            function mom_region_eco_memo_business_progress_data() {
                return new Promise((resolve, reject) => {
                    const containerSelector = '.card:has(#mom_region_eco_memo_business_progress) .card-body';

                    var mom_date = $("#mom-region-echo-memo-business-progress-date").val();
                    var mom_channel = $("#mom-region-echo-memo-focus-cat-business-channel").val();
                    var mom_no_months = "";

                    var baseUrl = '@Url.Content("~/")';
                    $.ajax({
                        url: baseUrl + 'dashboard/getMoMRegionEcoMemoBusinessProgress',
                        type: 'GET',
                        beforeSend: function () {
                            /*showCardSpinner(containerSelector);*/
                        },
                        data: { p_date_to: mom_date, mom_channel: mom_channel, p_no_months: mom_no_months },
                        success: function (result) {

                            if (result != null) {
                                var momRegionEcoMemoData = JSON.parse(result);
                                //console.log("Eco Region Memo Business Progress")
                                //console.log(momRegionEcoMemoData);
                                //mom_business_progress();
                                mom_region_eco_memo_business_progress(momRegionEcoMemoData);
                            }
                            resolve();
                        },
                        error: function (xhr, status, error) {
                            console.error("Error fetching data:", error);
                            alert("Failed to fetch business progress data.");
                            reject();
                        },
                        complete: function () {
                            /*hideCardSpinner(containerSelector);*/
                        }
                    });

                });
            }

            var momRegionEcoMemoChart = null;

            function mom_region_eco_memo_business_progress(rawData) {
                var mom_chart_color = getChartColorsArray("mom_business_progress");


                // Get unique sorted months
                const months = [...new Set(rawData.map(item => {
                    const d = new Date(item.SALES_MONTH);
                    return `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}`;
                }))].sort();

                // Get unique regions
                const regions = [...new Set(rawData.map(item => item.REGION_NAME))];

                // Choose the metric to plot (e.g., "ECO", "MEMO", "SALES_TP_IN_CR", etc.)
                const metric = "ECO";

                // Build series per region
                const series = regions.map(region => {
                    const dataForRegion = rawData.filter(item => item.REGION_NAME === region);
                    const data = months.map(month => {
                        const match = dataForRegion.find(item => {
                            const d = new Date(item.SALES_MONTH);
                            const itemMonth = `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}`;
                            return itemMonth === month;
                        });
                        return match ? match[metric] : 0;
                    });

                    return {
                        name: region,
                        data: data
                    };
                });

                //console.log({ categories: months, series });





                // Chart config
                const options = {
                    chart: {
                        type: 'line',
                        height: 400,
                        toolbar: {
                            show: true
                        }
                    },
                    title: {
                        text: "Monthly Performance Metrics",
                        align: 'center'
                    },
                    xaxis: {
                        categories: months,
                        title: { text: "Month" }
                    },
                    yaxis: {
                        title: { text: "Region wise " + metric  },
                        labels: {
                            formatter: function (val) {
                                return val.toFixed(0);
                            }
                        }
                    },
                    dataLabels: {
                        enabled: false
                    },
                    stroke: {
                        curve: 'smooth',
                        width: 2
                    },
                    tooltip: {
                        shared: true,
                        intersect: false
                    },
                    legend: {
                        position: 'bottom'
                    },
                    series: series
                };


                // Destroy existing chart before rendering new one
                if (momRegionEcoMemoChart !== null) {
                    momRegionEcoMemoChart.destroy();
                }

                momRegionEcoMemoChart = new ApexCharts(document.querySelector("#mom_region_eco_memo_business_progress"), options);
                momRegionEcoMemoChart.render();
            }

            /*mom_region_eco_memo_business_progress_data();*/

            /** MoM Eco Memo Business Progress End **/

            /** Quarterly Business Trend **/



            function quarterly_business_trend_data() {
                return new Promise((resolve, reject) => {
                    const containerSelector = '.card:has(#quarterly-business-trend-progress-date) .card-body';

                    var mom_date = $("#quarterly-business-trend-progress-date").val();
                    var mom_channel = $("#mom-region-echo-memo-focus-cat-business-channel").val();
                    var mom_no_months = "";

                    var baseUrl = '@Url.Content("~/")';
                    $.ajax({
                        url: baseUrl + 'dashboard/getQuarterlyBusinessTrend',
                        type: 'GET',
                        beforeSend: function () {
                            /*showCardSpinner(containerSelector);*/
                        },
                        data: { p_date_to: mom_date, mom_channel: mom_channel, p_no_months: mom_no_months },
                        success: function (result) {

                            if (result != null) {
                                var qbtData = JSON.parse(result);
                                //console.log("Quarterly Business Trend")
                                //console.log(qbtData);
                                //mom_business_progress();
                                quarterly_business_trend(qbtData);
                            }
                            resolve();
                        },
                        error: function (xhr, status, error) {
                            console.error("Error fetching data:", error);
                            alert("Failed to fetch business progress data.");
                            reject();
                        },
                        complete: function () {
                            /*hideCardSpinner(containerSelector);*/
                        }
                    });

                });
            }


            var qbtChart = null;


            function quarterly_business_trend(rawData) {
                var mom_chart_color = getChartColorsArray("mom_business_progress");

                const categories = rawData.map(item => item.QUARTER);
                const memoData = rawData.map(item => item.MEMO);
                const ecoData = rawData.map(item => item.ECO);
                const salesData = rawData.map(item => item.SALES_IN_TP);

                    const options = {
                        chart: {
                            type: 'bar',
                            height: 400
                        },
                        title: {
                            text: 'Month-wise Sales in TP',
                            align: 'center'
                        },
                        series: [{
                            name: 'Sales (TP)',
                            data: salesData
                        },
                            {
                                name: 'MEMO',
                                data: memoData
                            }, {
                                name: 'ECO',
                                data: ecoData
                            }],
                        xaxis: {
                            categories: categories,
                            title: {
                                text: 'Quarter'
                            }
                        },
                        yaxis: {
                            title: {
                                text: 'Sales (TP in Crore) | Memo | ECO'
                            }
                        },
                        dataLabels: {
                            enabled: true
                        },
                       // colors: mom_chart_color,
                        grid: {
                            show: true,
                            xaxis: {
                                lines: {
                                    show: true
                                }
                            },
                            yaxis: {
                                lines: {
                                    show: false
                                }
                            },
                            padding: {
                                top: 0,
                                right: -2,
                                bottom: 15,
                                left: 10
                            }
                        },
                        legend: {
                            show: true,
                            horizontalAlign: "center",
                            offsetX: 0,
                            offsetY: -5,
                            markers: {
                                width: 9,
                                height: 9,
                                radius: 6
                            },
                            itemMargin: {
                                horizontal: 10,
                                vertical: 0
                            }
                        },
                        //plotOptions: {
                        //    bar: {
                        //        columnWidth: "30%",
                        //        barHeight: "70%"
                        //    }
                        //}
                    };




                // Destroy existing chart before rendering new one
                if (qbtChart !== null) {
                    qbtChart.destroy();
                }

                qbtChart = new ApexCharts(document.querySelector("#quarterly_business_trend"), options);
                qbtChart.render();
            }

            //quarterly_business_trend_data();
            /** Quarteryly Business Trend End **/



        /************************************************************/


        /* field Stracture wise sales */

            // Helper to sanitize keys for CSS use
            function sanitizeClassName(str) {
                return str.replace(/\s+/g, '_').replace(/[^\w\-]/g, '');
            }

            function getFieldStructureSalesInTP_data() {
                return new Promise((resolve, reject) => {
                    const containerSelector = '.card:has(#field_strudcture_wise_sales) .card-body';

                    var mom_date = $("#quarterly-business-trend-progress-date").val();
                    var mom_channel = $("#mom-region-echo-memo-focus-cat-business-channel").val();
                    var mom_no_months = "";
                    var dealer_id = "18";
                    var limit = "0";
                    //getSalesStatusRouteWise(string p_date_to, string mom_channel, string p_no_months, string dealer_id, string limit)
                    var baseUrl = '@Url.Content("~/")';
                    $.ajax({
                        url: baseUrl + 'dashboard/getFieldStructureSalesInTP',
                        type: 'GET',
                        beforeSend: function () {
                            /*showCardSpinner(containerSelector);*/
                        },
                        //data: { p_date_to: mom_date, mom_channel: mom_channel, p_no_months: mom_no_months, dealer_id:dealer_id, limit:limit },
                        success: function (result) {
                            //console.log("fieldStructureSalesInTPData");
                            //console.log(result);
                            if (result != null) {
                                var fieldStructureSalesInTPData = JSON.parse(result);
                                console.log(fieldStructureSalesInTPData);

                                renderTableFieldStructureSalesInTP(fieldStructureSalesInTPData);

                            }
                            resolve();
                        },
                        error: function (xhr, status, error) {
                            console.error("Error fetching data:", error);
                            alert("Failed to fetch business progress data.");
                            reject();
                        },
                        complete: function () {
                            /*hideCardSpinner(containerSelector);*/
                        }
                    });

                });
            }

            const field_strudcture_wise_sales_table_tbody = document.getElementById("field_strudcture_wise_sales_table_body");
            const routeSalesStatusTable = document.getElementById("routeSalesStatusTable");

            function sanitizeClassName(name) {
                return name.replace(/\s+/g, "_").replace(/[^\w-]/g, "");
            }

            function fssToggleGroup(groupClass) {
                const rows = document.querySelectorAll(`tr[data-parent^="${groupClass}"]`);
                const icon = document.getElementById(`icon-${groupClass}`);
                const shouldExpand = icon.textContent === "▶";

                // Toggle visibility
                rows.forEach(row => {
                    const direct = row.dataset.parent === groupClass;
                    if (direct) {
                        row.classList.toggle("hidden", !shouldExpand);
                    }

                    // Always collapse deeper children when collapsing
                    if (!shouldExpand) {
                        row.classList.add("hidden");
                        const rowClass = row.dataset.key;
                        const rowIcon = document.getElementById(`icon-${rowClass}`);
                        if (rowIcon) rowIcon.textContent = "▶";
                    }
                });

                icon.textContent = shouldExpand ? "▼" : "▶";
            }

            function renderTableFieldStructureSalesInTP(data) {

                if (field_strudcture_wise_sales_table_tbody)
                    field_strudcture_wise_sales_table_tbody.innerHTML = "";

                const grouped = {};

                // Group the data
                data.forEach(item => {
                    const { REGION_NAME, AREA_NAME, TERITORRY_NAME } = item;

                    if (!grouped[REGION_NAME]) grouped[REGION_NAME] = {};
                    if (!grouped[REGION_NAME][AREA_NAME]) grouped[REGION_NAME][AREA_NAME] = {};
                    if (!grouped[REGION_NAME][AREA_NAME][TERITORRY_NAME]) {
                        grouped[REGION_NAME][AREA_NAME][TERITORRY_NAME] = [];
                    }

                    grouped[REGION_NAME][AREA_NAME][TERITORRY_NAME].push(item);
                });

                // Render rows
                Object.keys(grouped).forEach(region => {
                    const regionKey = sanitizeClassName(region);
                    let regionSum = 0;

                    const regionRow = document.createElement("tr");
                    regionRow.className = `group-header`;
                    regionRow.dataset.key = regionKey;
                    regionRow.onclick = () => fssToggleGroup(regionKey);
                    regionRow.innerHTML = `
        <td colspan="4">
          <span class="toggle-icon" id="icon-${regionKey}">▶</span>${region}
        </td>
        <td><span id="sum-${regionKey}">0</span></td>
      `;
                    field_strudcture_wise_sales_table_tbody.appendChild(regionRow);

                    Object.keys(grouped[region]).forEach(area => {
                        const areaKey = sanitizeClassName(`${region}_${area}`);
                        let areaSum = 0;

                        const areaRow = document.createElement("tr");
                        areaRow.className = `subgroup-header hidden`;
                        areaRow.dataset.parent = regionKey;
                        areaRow.dataset.key = areaKey;
                        areaRow.onclick = () => fssToggleGroup(areaKey);
                        areaRow.innerHTML = `
          <td></td>
          <td colspan="3">
            <span class="toggle-icon" id="icon-${areaKey}">▶</span>${area}
          </td>

          <td><span id="sum-${areaKey}">0</span></td>
        `;
                        field_strudcture_wise_sales_table_tbody.appendChild(areaRow);

                        Object.keys(grouped[region][area]).forEach(territory => {
                            const territoryKey = sanitizeClassName(`${region}_${area}_${territory}`);
                            const items = grouped[region][area][territory];
                            const territorySum = items.reduce((sum, i) => sum + i.SALES_IN_TP, 0);
                            areaSum += territorySum;

                            const territoryRow = document.createElement("tr");
                            territoryRow.className = `subgroup-header hidden`;
                            territoryRow.dataset.parent = areaKey;
                            territoryRow.dataset.key = territoryKey;
                            territoryRow.onclick = () => fssToggleGroup(territoryKey);
                            territoryRow.innerHTML = `
            <td></td>
            <td></td>
            <td colspan=2>
              <span class="toggle-icon" id="icon-${territoryKey}">▶</span>${territory}
            </td>

            <td>${territorySum.toFixed(2)}</td>
          `;
                            field_strudcture_wise_sales_table_tbody.appendChild(territoryRow);

                            items.forEach(item => {
                                const dealerRow = document.createElement("tr");
                                dealerRow.className = `hidden`;
                                dealerRow.dataset.parent = territoryKey;
                                dealerRow.innerHTML = `
              <td></td>
              <td></td>
              <td></td>
              <td><span class="styled-link dealer" id="${item.DEALER_ID}">${item.DEALER_NAME}</span></td>
              <td>${item.SALES_IN_TP.toFixed(2)}</td>
            `;
                                field_strudcture_wise_sales_table_tbody.appendChild(dealerRow);
                            });
                        });

                        document.getElementById(`sum-${areaKey}`).textContent = areaSum.toFixed(2);
                        regionSum += areaSum;
                    });

                    document.getElementById(`sum-${regionKey}`).textContent = regionSum.toFixed(2);
                });
            }

            $("body").on("click", ".dealer", function () {
                var dealerId = $(this).attr('id');
                var dealerName = $(this).html();

                getSalesStatusRouteWise_data(dealerId);
                $("#dealer_info").html ( `Dealer : ${dealerName}`);

            })



        //getSalesStatusRouteWise_data("18");

            function getSalesStatusRouteWise_data(dealer_id, limit = "0") {

                const containerSelector = '.card:has(#routeSalesStatusTable) .card-body';

                var mom_date = $("#quarterly-business-trend-progress-date").val();
                var mom_channel = $("#mom-region-echo-memo-focus-cat-business-channel").val();
                var mom_no_months = "";
               // var dealer_id = "18";
               // var limit = "0";
                //getSalesStatusRouteWise(string p_date_to, string mom_channel, string p_no_months, string dealer_id, string limit)
                var baseUrl = '@Url.Content("~/")';
                $.ajax({
                    url: baseUrl + 'dashboard/getSalesStatusRouteWise',
                    type: 'GET',
                    beforeSend: function () {
                        /*showCardSpinner(containerSelector);*/
                    },
                    data: { p_date_to: mom_date, mom_channel: mom_channel, p_no_months: mom_no_months, dealer_id:dealer_id, limit:limit },
                    success: function (result) {
                        //console.log(result);
                        if (result != null) {
                          var  routeSalesData = JSON.parse(result);
                            //console.log("getSalesStatusRouteWise")


                            renderGroupedData(routeSalesData);


                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Error fetching data:", error);
                        alert("Failed to fetch business progress data.");
                    },
                    complete: function () {
                        /*hideCardSpinner(containerSelector);*/
                    }
                });


            }


            function renderGroupedData(data) {
                // Clear existing rows correctly
                $("#routeSalesStatusTable tbody").empty();

                let grouped = {};

                // Group by ROUTE
                data.forEach(row => {
                    if (!grouped[row.ROUTE]) grouped[row.ROUTE] = [];
                    grouped[row.ROUTE].push(row);
                });

                // Inject rows: group -> child1 -> child2 ...
                Object.keys(grouped).forEach((groupKey, index) => {
                    const groupRows = grouped[groupKey];

                    // Compute totals
                    const totalTP = groupRows.reduce((sum, r) => sum + parseFloat(r.TOTAL_SALES_IN_TP || 0), 0);
                    const totalMemo = groupRows.reduce((sum, r) => sum + parseInt(r.TOTAL_MEMO || 0), 0);
                    const noMonths = groupRows.reduce((max, r) => max > parseInt(r.NO_OF_SALES_MONTH || 0) ? max : parseInt(r.NO_OF_SALES_MONTH || 0) , 0);
                    const sr_name = groupRows[0]['SO_NAME']; // use first row, not index
                    const avgMonthSales = (totalTP / noMonths).toFixed(2);

                    // Create group row with unique ID
                    const groupId = `group-${index}`;
                    const $groupRow = $(`
            <tr class="group collapsed" data-group="${groupId}" style="cursor:pointer; background:#dfefff; font-weight:bold;">
                <td colspan="2"><span class="toggle-icon">▶</span> ${groupKey} [${sr_name}]</td>
                <td>${totalTP.toFixed(2)}</td>
                <td>${totalMemo}</td>
                <td>${noMonths}</td>
                <td>${avgMonthSales}</td>
            </tr>
        `);

                    // Insert group row manually into DOM
                    $("#routeSalesStatusTable tbody").append($groupRow);

                    // Add child rows (hidden by default)
                    groupRows.forEach(r => {
                        const $childRow = $(`
                <tr class="child-row child-of-${groupId}" style="display:none;">
                    <td></td>
                    <td ><span class="styled-link outlet_for_proudct_detail" id="${r.OUTLET_ID}" title="View detail Product Sales Comair"> ${fixMojibake(r.OUTLET_NAME)}</span></td>
                    <td>${r.TOTAL_SALES_IN_TP}</td>
                    <td>${r.TOTAL_MEMO}</td>
                    <td>${r.NO_OF_SALES_MONTH}</td>
                    <td>${r.AVG_SALES_PER_MONTH}</td>
                </tr>
            `);
                        $("#routeSalesStatusTable tbody").append($childRow);
                    });
                });

                // Toggle logic
                $('.group').off('click').on('click', function () {
                    const groupId = $(this).data('group');
                    const isCollapsed = $(this).hasClass('collapsed');
                    $(this).toggleClass('collapsed');
                    $(this).find('.toggle-icon').text(isCollapsed ? '▼' : '▶');
                    $(`.child-of-${groupId}`).toggle(isCollapsed);
                });
            }

            function fixMojibake(text) {
                try {
                    return decodeURIComponent(escape(text));
                } catch (e) {
                    return text; // fallback
                }
            }

            $("body").on("click", ".outlet_for_proudct_detail", function () {
                var outletId = $(this).attr("id");
                var outletName = $(this).html();

                var focusCategoryId = $(this).attr("id");

                regionId = $('#national-sku-kpi-region').val()

                areaId = $('#national-sku-kpi-area').val()


                var baseUrl = '@Url.Content("~/")';
                $.ajax({
                    url: baseUrl + 'dashboard/ProductSalesComparison',
                    type: 'GET',
                    data: {
                        p_date_to: "2025-07-30",
                        region_id: "",
                        area_id: "",
                        territory_id: "",
                        dealer_id:"",
                        outlet_id: outletId,
                        category_id: "",
                        focus_category_id:""
                    },
                    beforeSend: function () {
                        $('#productDeatilModal').modal('show');
                        $('#productDeatilModal .modal-title').html(`Product Sales detail - Outlet :[${outletName}]`);
                        $('#productDeatilModal .modal-body').empty();
                        /*showCardSpinner('#productDeatilModal .modal-body');*/
                    },

                    success: function (result) {
                        //console.log("proudct detial data");
                        //console.log(result);


                        if (result != null) {

                            $('#productDeatilModal .modal-title').html(`Product Sales detail - Outlet :[${outletName}]`);
                            $('#productDeatilModal .modal-body').html(result);
                            // show modal
                            $('#productDeatilModal').modal('show');

                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Error fetching data:", error);
                        alert("Failed to fetch business progress data.");
                    },
                    complete: function () {
                        /*hideCardSpinner();*/
                    }
                });

            })


           // getFieldStructureSalesInTP_data();

            /* field Stracture wise sales end */

            /* Region wise Target vs Achievement bar progress bar */

            function getRegionSalesTargetAchieveData() {
                return new Promise((resolve, reject) => {
                    const containerSelector = '.card:has(#RegionSalesTargetAchieve) .card-body';

                    var mom_date = $("#RegionSalesTargetAchieve_date").val();

                    var baseUrl = '@Url.Content("~/")';
                    $.ajax({
                        url: baseUrl + 'dashboard/getRegionSalesTargetAchieve',
                        type: 'GET',
                        beforeSend: function () {
                            $("#RegionSalesTargetAchieve").empty();

                            /*showCardSpinner(containerSelector);*/
                        },
                        data: { p_date_to: mom_date },
                        success: function (result) {
                            //console.log(result);
                            if (result != null) {
                                var regionSalesData = JSON.parse(result);
                                //console.log("RegionSalesTargetAchieve")


                                var achieveData
                                regionSalesData.forEach(row => {

                                    $("#RegionSalesTargetAchieve").append(` <p class="mt-3 mb-1">
                                                        ${row.REGION_NAME} <span class="float-end">${row.ACHIEVE}%</span>
                                                    </p>
                                                    <div class="progress mt-2" style="height: 6px;">
                                                        <div class="progress-bar progress-bar-striped bg-primary"
                                                             role="progressbar" style="width: ${row.ACHIEVE}%" aria-valuenow="${row.ACHIEVE}"
                                                             aria-valuemin="0" aria-valuemax="47"></div>
                                                    </div>`);

                                });


                            }
                            resolve();
                        },
                        error: function (xhr, status, error) {
                            console.error("Error fetching data:", error);
                            alert("Failed to fetch business progress data.");
                            reject();
                        },
                        complete: function () {
                            /*hideCardSpinner(containerSelector);*/
                        }
                    });
                });

            }

            $("body").on("change", "#RegionSalesTargetAchieve_date", function () {
                getRegionSalesTargetAchieveData();
            })

           // getRegionSalesTargetAchieveData();

            /* Region wise Target vs Achievement bar progress bar END*/


            /**** Best Selling Products ***/

            function getDateRange(range) {
                const today = new Date();
                let p_date_from, p_date_to;

                switch (range) {
                    case 'today':
                        p_date_from = p_date_to = formatDate(today);
                        break;

                    case 'yesterday':
                        const yest = new Date(today);
                        yest.setDate(today.getDate() - 1);
                        p_date_from = p_date_to = formatDate(yest);
                        break;

                    case 'last7':
                        const last7 = new Date(today);
                        last7.setDate(today.getDate() - 6);
                        p_date_from = formatDate(last7);
                        p_date_to = formatDate(today);
                        break;

                    case 'last30':
                        const last30 = new Date(today);
                        last30.setDate(today.getDate() - 29);
                        p_date_from = formatDate(last30);
                        p_date_to = formatDate(today);
                        break;

                    case 'thisMonth':
                        const startOfMonth = new Date(today.getFullYear(), today.getMonth(), 1);
                        p_date_from = formatDate(startOfMonth);
                        p_date_to = formatDate(today);
                        break;

                    case 'lastMonth':
                        const firstLastMonth = new Date(today.getFullYear(), today.getMonth() - 1, 1);
                        const endLastMonth = new Date(today.getFullYear(), today.getMonth(), 0);
                        p_date_from = formatDate(firstLastMonth);
                        p_date_to = formatDate(endLastMonth);
                        break;
                }

                return { p_date_from, p_date_to };
            }

            function formatDate(date) {
                const y = date.getFullYear();
                const m = String(date.getMonth() + 1).padStart(2, '0');
                const d = String(date.getDate()).padStart(2, '0');
                return `${y}-${m}-${d}`;
            }

            function getBestSellingProductsData() {
                return new Promise((resolve, reject) => {
                    const containerSelector = '.card:has(#best-selling-products-body) .card-body';

                    var val = $("#best_selling_products_date").val();

                    const { p_date_from, p_date_to } = getDateRange(val);


                    var baseUrl = '@Url.Content("~/")';
                    $.ajax({
                        url: baseUrl + 'dashboard/GetBestSellingProducts',
                        type: 'GET',
                        beforeSend: function () {
                            $("#best-selling-products-body").empty();

                            /*showCardSpinner(containerSelector);*/
                        },
                        data: { p_date_from: p_date_from, p_date_to: p_date_to },
                        success: function (result) {
                            //console.log("best-selling-products-body");
                            //console.log(result);
                            if (result != null) {
                                var data = JSON.parse(result);
                                let rows = '';


                                data.forEach(p => {
                                    rows += `
                            <tr>
                                <td>
                                    <div class="d-flex align-items-center">
                                        <div>
                                            <h5 class="fs-14 my-1">
                                                <a href="#" class="text-reset">${p.PRODUCT_NAME}</a>
                                            </h5>
                                            <span class="text-muted">${p.CATEGORY_NAME}</span> - <span class="text-muted">${p.BRAND_NAME}</span>
                                        </div>
                                    </div>
                                </td>
                                <td><h5 class="fs-14 my-1 fw-normal">${p.PRICE}</h5><span class="text-muted">Price</span></td>
                                <td><h5 class="fs-14 my-1 fw-normal">${p.ORDERS}</h5><span class="text-muted">Quantity</span></td>

                                <td><h5 class="fs-14 my-1 fw-normal">${p.AMOUNT}</h5><span class="text-muted">Amount</span></td>
                            </tr>`;
                                });
                                $('#best-selling-products-body').html(rows);

                            }
                            resolve();
                        },
                        error: function (xhr, status, error) {
                            console.error("Error fetching data:", error);
                            alert("Failed to fetch business progress data.");
                            reject();
                        },
                        complete: function () {
                            /*hideCardSpinner(containerSelector);*/
                        }
                    });
                });

            }
            //getBestSellingProductsData();
            $("body").on("change", "#best_selling_products_date", function () {
                getBestSellingProductsData();
            });
            /**** Best Selling Products END ***/

            /*** Top Seller ***/

            function getTopSellersData() {
                return new Promise((resolve, reject) => {
                    const containerSelector = '.card:has(#top-sellers-body) .card-body';

                    var val = $("#top_sellters_date").val();

                    const { p_date_from, p_date_to } = getDateRange(val);


                    var baseUrl = '@Url.Content("~/")';
                    $.ajax({
                        url: baseUrl + 'dashboard/GetTopSellers',
                        type: 'GET',
                        beforeSend: function () {
                            $("#top-sellers-body").empty();

                            /*showCardSpinner(containerSelector);*/
                        },
                        data: { p_date_from: p_date_from, p_date_to: p_date_to },
                        success: function (result) {
                            //console.log("top-sellers-body");
                            //console.log(result);
                            if (result != null) {
                                var data = JSON.parse(result);
                                let rows = '';

                                data.forEach(s => {

                                    rows += `
                            <tr>
                                <td>
                                    <div class="d-flex align-items-center">

                                        <div>
                                            <h5 class="fs-14 my-1"><a href="#" class="text-reset">${s.SO_NAME}</a></h5>
                                            <span class="text-muted">${s.DEALER_NAME}, </span>
                                            <span class="text-muted">${s.AREA_NAME}, </span>
                                            <span class="text-muted">${s.REGION_NAME}</span>
                                        </div>
                                    </div>
                                </td>
                               <td><span class="text-muted">${s.CURRENT_TOTAL_SALES}</span></td>
                                <td><h5 class="fs-14 mb-0">${s.GROWTH_PERCENT ?? 0}%<i class="ri-bar-chart-fill text-success fs-16 align-middle ms-2"></i></h5></td>
                            </tr>`;
                                });
                                $('#top-sellers-body').html(rows);

                            }
                            resolve();
                        },
                        error: function (xhr, status, error) {
                            console.error("Error fetching data:", error);
                            alert("Failed to fetch business progress data.");
                            reject();
                        },
                        complete: function () {
                            /*hideCardSpinner(containerSelector);*/
                        }
                    });
                });

            }

            //    getTopSellersData();
            $("body").on("change", "#top_sellters_date", function () {
                getTopSellersData();
            });
            /*** Top Seller END***/


            /** call all functions on load **/

                
            dashboardHeader(dt)
                .then(() => nationWiseSkuKpi(dt, regionId, areaId))
                .then(() => hideCardSpinner(nationWiseSkuKpiId))
                .then(() => delay(200))
                .then(() => owndbWiseSkuKpi(ownDbDt, ownDbRegionId, ownDbAreaId))
                .then(() => hideCardSpinner(ownDbSkuKpiId))
                .then(() => delay(200))
                .then(() => nationWisemtdPrimaryVsSecondary(dt, nationWisePriVsSecChannel, nationWisePriVsSecAreaId))
                .then(() => hideCardSpinner(priVsSecId))
                .then(() => delay(200))
                .then(() => mom_business_progress_data())
                .then(() => hideCardSpinner(momBusinessProgressId))
                .then(() => delay(200))
                .then(() => mom_focus_cat_business_progress_data())
                .then(() => hideCardSpinner(momFocusCatBusinessId))
                .then(() => delay(200))
                .then(() => mom_eco_memo_business_progress_data())
                .then(() => hideCardSpinner(momEcoMemoBusinessId))
                .then(() => delay(200))
                .then(() => cd_mom_business_progress_data())
                .then(() => hideCardSpinner(cdMomBusinessId))
                .then(() => delay(200))
                .then(() => mom_region_eco_memo_business_progress_data())
                .then(() => delay(200))
                .then(() => quarterly_business_trend_data())
                .then(() => hideCardSpinner(momRegionEcoMemoId))
                .then(() => delay(200))
                .then(() => getFieldStructureSalesInTP_data())
                .then(() => hideCardSpinner(fieldStructureSalesId))
                .then(() => delay(200))
                /*.then(() => loadChannelTargetVsSales()) // assumes it uses .card:has(#routeSalesStatusTable)
                .then(() => hideCardSpinner(routeSalesStatusId))
                .then(() => delay(200))*/
                .then(() => getRegionSalesTargetAchieveData())
                .then(() => hideCardSpinner(regionSalesTargetAchieveId))
                .then(() => delay(200))
                .then(() => getBestSellingProductsData())
                .then(() => hideCardSpinner(bestSellingProductsId))
                .then(() => delay(200))
                .then(() => getTopSellersData())
                .then(() => hideCardSpinner(topSellersId))
                .catch(error => console.log("Error in sequential load:", error));


            /** call all functions on load END**/



        })

    </script>

}